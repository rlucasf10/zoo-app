apiVersion: v1
data:
  agent-config.hcl: |
    # /home/vault/config.json (dentro del contenedor)
    auto_auth {
      method "kubernetes" {
        mount_path = "auth/kubernetes"
        config {
          role = "zoo-app"
          # token_path = "/var/run/secrets/kubernetes.io/serviceaccount/token" # Ya no es necesario si se usa ServiceAccount por defecto
        }
      }

      sink "file" {
        config {
          path = "/home/vault/.vault-token" # Donde el agente escribirá el token de Vault
        }
      }
    }

    # Esta sección 'vault' es redundante porque la estamos pasando con VAULT_ADDR en el init container,
    # pero si el agente la espera en el config, la ponemos.
    vault {
      address = "http://192.168.1.102:8200" # ¡Confirma esta IP!
    }

    template {
      destination = "/vault/secrets/.env" # <--- ¡CAMBIO AQUÍ: AHORA ES .env!
      contents = <<EOF
      {{- with secret "kv/zoo-app-static/google-creds" -}}
      GOOGLE_CLIENT_ID={{ .Data.data.client_id }}
      GOOGLE_CLIENT_SECRET={{ .Data.data.client_secret }}
      GOOGLE_REDIRECT_URI={{ .Data.data.redirect_uri }}\n # <--- ¡CAMBIO AQUÍ: AÑADIMOS SALTO DE LÍNEA EXPLICITO!
      {{- end -}}
      {{- with secret "database/creds/zoo-app-web-role" -}}
      DB_HOST=zoo-app-mysql
      DB_PORT=3306
      DB_NAME=zoo_app # <--- ¡CAMBIO AQUÍ: AHORA ES zoo_app (sin pepe)!
      DB_USER={{ .Data.username }}
      DB_PASS={{ .Data.password }}
      {{- end -}}
      EOF
    }

    log_level = "info"
    exit_after_auth = true # El init container sale después de autenticarse
kind: ConfigMap
metadata:
  creationTimestamp: null
  name: vault-agent-config-manual
